package com.platum.restflow.resource;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.ListIterator;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlTransient;

import org.apache.commons.lang3.StringUtils;

import com.platum.restflow.resource.property.ResourceProperty;

@XmlRootElement(name = "resource")
@XmlAccessorType (XmlAccessType.FIELD)
@XmlSeeAlso({ResourceProperty.class, ResourceMethod.class})
public class Resource implements Serializable {

	private static final long serialVersionUID = -8367294179139576706L;
	
	@XmlAttribute
	private String name;
	
	@XmlAttribute(name="class")
	private String resourceClass;	
	
	@XmlAttribute
	private String table;
	
	private String datasource;
	
	@XmlElement(name="filesystem")
	private String fileSystem;
	
	private String idProperty;	
	
	@XmlTransient
	private ResourceProperty idPropertyObject;
	
	public boolean generateCrud;
	
	private boolean internal;
	
	private boolean idAutoGenerated = true;
	
	@XmlElementWrapper(name = "properties")
	@XmlElement(name="property")
	private List<ResourceProperty> properties;
	
	@XmlElementWrapper(name = "methods")
	@XmlElement(name="method")
	private List<ResourceMethod> methods;
	
	@XmlElement(name="download")
	private DownloadMethod download;
	
	@XmlElement(name="upload")
	private UploadMethod upload;
	
	public String getTable() {
		return StringUtils.isEmpty(table) ? name : table;
	}

	public Resource setTable(String table) {
		this.table = table;
		return this;
	}

	public String getName() {
		return name;
	}

	public Resource setName(String name) {
		this.name = name;
		return this;
	}

	public String getIdProperty() {
		return idProperty;
	}

	public Resource setIdProperty(String idProperty) {
		this.idProperty = idProperty;
		idPropertyObject = getProperty(idProperty);
		return this;
	}
	
	public ResourceProperty getIdPropertyAsObject() {
		if(StringUtils.isEmpty(idProperty)) {
			return null;
		} else if(idPropertyObject == null) {
			idPropertyObject = getProperty(idProperty);
		}
		return idPropertyObject;
	}

	public boolean isIdAutoGenerated() {
		return idAutoGenerated && !StringUtils.isEmpty(idProperty);
	}

	public Resource setIdAutoGenerated(boolean idAutoGenerated) {
		this.idAutoGenerated = idAutoGenerated;
		return this;
	}

	public String getResourceClass() {
		return resourceClass;
	}

	public Resource setResourceClass(String resourceClass) {
		this.resourceClass = resourceClass;
		return this;
	}

	public List<ResourceProperty> getProperties() {
		return properties;
	}
	
	public boolean hasProperties() {
		return properties != null && !properties.isEmpty();
	}

	public Resource setProperties(List<ResourceProperty> properties) {
		this.properties = properties;
		return this;
	}
	
	public ResourceProperty getProperty(String name) {
		try {
			if(properties != null && !properties.isEmpty()) {
				return properties.stream()
						  .filter(property -> property.getName().equals(name))
						  .findAny()
						  .orElse(null);
			}			
		} catch(Throwable e) {}
		return null;
	}
	
	public Resource setProperty(ResourceProperty property) {
		if(properties == null) {
			properties = new ArrayList<>();
		}
		property.setName(name);
		ListIterator<ResourceProperty> iterator = properties.listIterator();
		while(iterator.hasNext()) {
			if(iterator.next().getName()
					.equals(property.getName())) {
				iterator.set(property);
				return this;
			}
		}
		properties.add(property);
		return this;
	}
	
	public List<ResourceMethod> getMethods() {
		return methods;
	}

	public Resource setMethods(List<ResourceMethod> methods) {
		this.methods = methods;
		return this;
	}
	
	public ResourceMethod getMethod(String name) {
		try {
			if(methods != null && !methods.isEmpty()) {
				return methods.stream()
						  .filter(method -> method.getName().equals(name))
						  .findAny()
						  .orElse(null);
			}			
		} catch(Throwable e) {}
		return null;
	}
		
	public ResourceMethod getMethodByUrl(String url) {
		try {
			if(methods != null && !methods.isEmpty()) {
				return methods.stream()
						  .filter(method -> method.getUrl().equalsIgnoreCase(url))
						  .findAny()
						  .orElse(null);
			}			
		} catch(Throwable e) {}
		return null;
	}
	
	public Resource addMethod(ResourceMethod method) {
		if(method != null) {
			if(methods == null) {
				methods = new ArrayList<>();
			}
			ListIterator<ResourceMethod> iterator = methods.listIterator();
			while(iterator.hasNext()) {
				if(iterator.next().getName()
						.equals(method.getName())) {
					iterator.set(method);
					return this;
				}
			}
			methods.add(method);		
		}
		return this;
	}

	public String getDatasource() {
		return datasource;
	}

	public Resource setDatasource(String datasource) {
		this.datasource = datasource;
		return this;
	}
	
	public String getFileSystem() {
		return fileSystem;
	}
	
	public Resource setFileSystem(String fileSystem) {
		this.fileSystem = fileSystem;
		return this;
	} 

	public boolean isInternal() {
		return internal;
	}

	public Resource setInternal(boolean internal) {
		this.internal = internal;
		return this;
	}

	public boolean isGenerateCrud() {
		return generateCrud;
	}

	public Resource setGenerateCrud(boolean generateCrud) {
		this.generateCrud = generateCrud;
		return this;
	}
	
	

	public DownloadMethod getDownload() {
		return download;
	}

	public Resource setDownload(DownloadMethod download) {
		this.download = download;
		return this;
	}
	
	public UploadMethod getUpload() {
		return upload;
	}

	public Resource setUpload(UploadMethod upload) {
		this.upload = upload;
		return this;
	}

	@Override
	public String toString() {
		return "Resource [table=" + table + ", resourceClass=" + resourceClass + ", name=" + name + ", idProperty="
				+ idProperty + ", datasource=" + datasource + ", generateCrud="
				+ generateCrud + ", internal=" + internal + ", idAutoGenerated=" + idAutoGenerated + ", properties="
				+ properties + ", methods=" + methods + "]";
	}
	
}
